// 颜色材质,提供指定颜色或颜色纹理并渲染
Def HelperUnlitDef{
    Params{
        vec4 color;
        sampler2D colorMap;
        float alphaDiscard;
    }
    SubTechnology ColorPass{
        Vars{
            vec4 wordPosition;
            vec2 uv0;
        }
        Vs_Shader{
            void main(){
                //Context.OutPosition = Context.ProjectViewModelMatrix * vec4(Context.InPosition, 1.0f);
                Context.OutPosition = Context.ProjectMatrix * Context.ViewMatrix * Context.ModelMatrix * vec4(Context.InPosition, 1.0f);
                wordPosition = Context.OutPosition;
                uv0 = Context.InUv0;
            }
        }
        Fs_Shader{
            void main(){
                Context.OutColor = vec4(1.0f);
                // 使用自定义颜色输出
                #ifdef Params.color
                    Context.OutColor *= Params.color;
                #endif

                // 使用纹理
                #ifdef Params.colorMap
                    Context.OutColor *= texture(Params.colorMap, uv0);
                #endif

                #ifdef Params.alphaDiscard
                    if(Context.OutColor.a < Params.alphaDiscard){
                        discard;
                    }
                #endif
            }
        }
    }
    Technology{
        Sub_Pass{
            Pass ColorPass{
            }
        }
    }
}
